{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction to testtesttfswitch The testtesttfswitch command line tool lets you switch between different versions of terraform . If you do not have a particular version of terraform installed, testtesttfswitch lets you download the version you desire. The installation is minimal and easy. Once installed, simply select the version you require from the dropdown and start using terraform.","title":"Introduction to testtesttfswitch"},{"location":"#introduction-to-testtesttfswitch","text":"The testtesttfswitch command line tool lets you switch between different versions of terraform . If you do not have a particular version of terraform installed, testtesttfswitch lets you download the version you desire. The installation is minimal and easy. Once installed, simply select the version you require from the dropdown and start using terraform.","title":"Introduction to testtesttfswitch"},{"location":"Continuous-Integration/","text":"Jenkins setup #!/bin/bash echo \"Installing testtfswitch locally\" wget https://raw.githubusercontent.com/warrensbox/terraform-switcher/release/install.sh chmod 755 install.sh ./install.sh -b bin-directory ./bin-directory/testtfswitch If you have limited permission, try: #!/bin/bash echo \"Installing testtfswitch locally\" wget https://raw.githubusercontent.com/warrensbox/terraform-switcher/release/install.sh chmod 755 install.sh ./install.sh -b bin-directory CUSTOMBIN=`pwd`/bin #set custom bin path mkdir $CUSTOMBIN #create custom bin path export PATH=$PATH:$CUSTOMBIN #Add custom bin path to PATH environment ./bin-directory/testtfswitch -b $CUSTOMBIN/terraform 0.11.7 terraform -v #testing version Circle CI setup Example config yaml version: 2 jobs: build: docker: - image: ubuntu working_directory: /go/src/github.com/warrensbox/terraform-switcher steps: - checkout - run: command: | set +e apt-get update apt-get install -y wget rm -rf /var/lib/apt/lists/* echo \"Installing testtfswitch locally\" wget https://raw.githubusercontent.com/warrensbox/terraform-switcher/release/install.sh chmod 755 install.sh ./install.sh -b bin-directory CUSTOMBIN=`pwd`/bin #set custom bin path mkdir $CUSTOMBIN #create custom bin path export PATH=$PATH:$CUSTOMBIN #Add custom bin path to PATH environment ./bin-directory/testtfswitch -b $CUSTOMBIN/terraform 0.11.7 terraform -v #testing version","title":"Continuous Integration"},{"location":"Continuous-Integration/#jenkins-setup","text":"#!/bin/bash echo \"Installing testtfswitch locally\" wget https://raw.githubusercontent.com/warrensbox/terraform-switcher/release/install.sh chmod 755 install.sh ./install.sh -b bin-directory ./bin-directory/testtfswitch If you have limited permission, try: #!/bin/bash echo \"Installing testtfswitch locally\" wget https://raw.githubusercontent.com/warrensbox/terraform-switcher/release/install.sh chmod 755 install.sh ./install.sh -b bin-directory CUSTOMBIN=`pwd`/bin #set custom bin path mkdir $CUSTOMBIN #create custom bin path export PATH=$PATH:$CUSTOMBIN #Add custom bin path to PATH environment ./bin-directory/testtfswitch -b $CUSTOMBIN/terraform 0.11.7 terraform -v #testing version","title":"Jenkins setup"},{"location":"Continuous-Integration/#circle-ci-setup","text":"Example config yaml version: 2 jobs: build: docker: - image: ubuntu working_directory: /go/src/github.com/warrensbox/terraform-switcher steps: - checkout - run: command: | set +e apt-get update apt-get install -y wget rm -rf /var/lib/apt/lists/* echo \"Installing testtfswitch locally\" wget https://raw.githubusercontent.com/warrensbox/terraform-switcher/release/install.sh chmod 755 install.sh ./install.sh -b bin-directory CUSTOMBIN=`pwd`/bin #set custom bin path mkdir $CUSTOMBIN #create custom bin path export PATH=$PATH:$CUSTOMBIN #Add custom bin path to PATH environment ./bin-directory/testtfswitch -b $CUSTOMBIN/terraform 0.11.7 terraform -v #testing version","title":"Circle CI setup"},{"location":"How-to-Contribute/","text":"Step by step on how to contribute An open source project becomes meaningful when people collaborate to improve the code. If I were to write all the code by myself, then I am only creating a software solely on my opnion and purpose. So, please look at the code, critique and make suggestions. Lets make testtfswitch better! Required version go version 1.13 Step 1 - Create workspace Skip this step if you already have a github go workspace Create a github workspace. Step 2 - Set GOPATH Skip this step if you already have a github go workspace Export your GOPATH environment variable in your go directory. export GOPATH=`pwd` Step 3 - Clone repository Git clone this repository. git clone git@github.com:warrensbox/terraform-switcher.git Step 4 - Get dependencies Go get all the dependencies. go mod download go get -v -t -d ./... Test the code (optional). go vet -tests=false ./... go test -v ./... Step 5 - Build executable Create a new branch. git checkout -b feature/put-your-branch-name-here Refactor and add new features to the code. Go build the code. go build -o test-testtfswitch Test the code and create a new pull request! Contributors","title":"How to Contribute"},{"location":"How-to-Contribute/#step-by-step-on-how-to-contribute","text":"An open source project becomes meaningful when people collaborate to improve the code. If I were to write all the code by myself, then I am only creating a software solely on my opnion and purpose. So, please look at the code, critique and make suggestions. Lets make testtfswitch better!","title":"Step by step on how to contribute"},{"location":"How-to-Contribute/#required-version","text":"go version 1.13","title":"Required version"},{"location":"How-to-Contribute/#step-1-create-workspace","text":"Skip this step if you already have a github go workspace Create a github workspace.","title":"Step 1 - Create workspace"},{"location":"How-to-Contribute/#step-2-set-gopath","text":"Skip this step if you already have a github go workspace Export your GOPATH environment variable in your go directory. export GOPATH=`pwd`","title":"Step 2 - Set GOPATH"},{"location":"How-to-Contribute/#step-3-clone-repository","text":"Git clone this repository. git clone git@github.com:warrensbox/terraform-switcher.git","title":"Step 3 - Clone repository"},{"location":"How-to-Contribute/#step-4-get-dependencies","text":"Go get all the dependencies. go mod download go get -v -t -d ./... Test the code (optional). go vet -tests=false ./... go test -v ./...","title":"Step 4 - Get dependencies"},{"location":"How-to-Contribute/#step-5-build-executable","text":"Create a new branch. git checkout -b feature/put-your-branch-name-here Refactor and add new features to the code. Go build the code. go build -o test-testtfswitch Test the code and create a new pull request!","title":"Step 5 - Build executable"},{"location":"How-to-Contribute/#contributors","text":"","title":"Contributors"},{"location":"Install/","text":"Installation testtfswitch is available for MacOS and Linux based operating systems. Homebrew Installation for MacOS is the easiest with Homebrew. If you do not have homebrew installed, click here . brew install warrensbox/tap/testtfswitch Linux Installation for Linux operation systems. curl -L https://raw.githubusercontent.com/warrensbox/terraform-switcher/release/install.sh | bash Install from source Alternatively, you can install the binary from the source here .","title":"Install"},{"location":"Install/#installation","text":"testtfswitch is available for MacOS and Linux based operating systems.","title":"Installation"},{"location":"Install/#homebrew","text":"Installation for MacOS is the easiest with Homebrew. If you do not have homebrew installed, click here . brew install warrensbox/tap/testtfswitch","title":"Homebrew"},{"location":"Install/#linux","text":"Installation for Linux operation systems. curl -L https://raw.githubusercontent.com/warrensbox/terraform-switcher/release/install.sh | bash","title":"Linux"},{"location":"Install/#install-from-source","text":"Alternatively, you can install the binary from the source here .","title":"Install from source"},{"location":"Quick-Start/","text":"How to use: Use dropdown menu to select version You can switch between different versions of terraform by typing the command testtfswitch on your terminal. Select the version of terraform you require by using the up and down arrow. Hit Enter to select the desired version. The most recently selected versions are presented at the top of the dropdown. Supply version on command line You can also supply the desired version as an argument on the command line. For example, testtfswitch 0.10.5 for version 0.10.5 of terraform. Hit Enter to switch. See all versions including beta, alpha and release candidates(rc) Display all versions including beta, alpha and release candidates(rc). For example, testtfswitch -l or testtfswitch --list-all to see all versions. Hit Enter to select the desired version. Use version.tf file If a .tf file with the terraform constrain is included in the current directory, it should automatically download or switch to that terraform version. For example, the following should automatically switch terraform to version 0.12.24 : terraform { required_version = \">= 0.12.9\" required_providers { aws = \">= 2.52.0\" kubernetes = \">= 1.11.1\" } } Use .testtfswitch.toml file (For non-admin - users with limited privilege on their computers) This is similiar to using a .testtfswitchrc file, but you can specify a custom binary path for your terraform installation Create a custom binary path. Ex: mkdir /Users/warrenveerasingam/bin (replace warrenveerasingam with your username) Add the path to your PATH. Ex: export PATH=$PATH:/Users/warrenveerasingam/bin (add this to your bash profile or zsh profile) Pass -b or --bin parameter with your custom path to install terraform. Ex: testtfswitch -b /Users/warrenveerasingam/bin/terraform 0.10.8 Optionally, you can create a .testtfswitch.toml file in your terraform directory. Your .testtfswitch.toml file should look like this: bin = \"/Users/warrenveerasingam/bin/terraform\" version = \"0.11.3\" Run testtfswitch and it should automatically install the required terraform version in the specified binary path Use .testtfswitchrc file Create a .testtfswitchrc file containing the desired version For example, echo \"0.10.5\" >> .testtfswitchrc for version 0.10.5 of terraform Run the command testtfswitch in the same directory as your .testtfswitchrc Instead of a .testtfswitchrc file, a .terraform-version file may be used for compatibility with tfenv and other tools which use it Automatically switch with bash Add the following to the end of your ~/.bashrc file: (Use either .testtfswitchrc or .testtfswitch.toml or .terraform-version ) cdtesttfswitch(){ builtin cd \"$@\"; cdir=$PWD; if [ -e \"$cdir/.testtfswitchrc\" ]; then testtfswitch fi } alias cd='cdtesttfswitch' Automatically switch with zsh Add the following to the end of your ~/.zshrc file: load-testtfswitch() { local testtfswitchrc_path=\".testtfswitchrc\" if [ -f \"$testtfswitchrc_path\" ]; then testtfswitch fi } add-zsh-hook chpwd load-testtfswitch load-testtfswitch NOTE: if you see an error like this: command not found: add-zsh-hook , then you might be on an older version of zsh (see below), or you simply need to load add-zsh-hook by adding this to your .zshrc : autoload -U add-zsh-hook older version of zsh cd(){ builtin cd \"$@\"; cdir=$PWD; if [ -e \"$cdir/.testtfswitchrc\" ]; then testtfswitch fi }","title":"Quick Start"},{"location":"Quick-Start/#how-to-use","text":"","title":"How to use:"},{"location":"Quick-Start/#use-dropdown-menu-to-select-version","text":"You can switch between different versions of terraform by typing the command testtfswitch on your terminal. Select the version of terraform you require by using the up and down arrow. Hit Enter to select the desired version. The most recently selected versions are presented at the top of the dropdown.","title":"Use dropdown menu to select version"},{"location":"Quick-Start/#supply-version-on-command-line","text":"You can also supply the desired version as an argument on the command line. For example, testtfswitch 0.10.5 for version 0.10.5 of terraform. Hit Enter to switch.","title":"Supply version on command line"},{"location":"Quick-Start/#see-all-versions-including-beta-alpha-and-release-candidatesrc","text":"Display all versions including beta, alpha and release candidates(rc). For example, testtfswitch -l or testtfswitch --list-all to see all versions. Hit Enter to select the desired version.","title":"See all versions including beta, alpha and release candidates(rc)"},{"location":"Quick-Start/#use-versiontf-file","text":"If a .tf file with the terraform constrain is included in the current directory, it should automatically download or switch to that terraform version. For example, the following should automatically switch terraform to version 0.12.24 : terraform { required_version = \">= 0.12.9\" required_providers { aws = \">= 2.52.0\" kubernetes = \">= 1.11.1\" } }","title":"Use version.tf file"},{"location":"Quick-Start/#use-testtfswitchtoml-file-for-non-admin-users-with-limited-privilege-on-their-computers","text":"This is similiar to using a .testtfswitchrc file, but you can specify a custom binary path for your terraform installation Create a custom binary path. Ex: mkdir /Users/warrenveerasingam/bin (replace warrenveerasingam with your username) Add the path to your PATH. Ex: export PATH=$PATH:/Users/warrenveerasingam/bin (add this to your bash profile or zsh profile) Pass -b or --bin parameter with your custom path to install terraform. Ex: testtfswitch -b /Users/warrenveerasingam/bin/terraform 0.10.8 Optionally, you can create a .testtfswitch.toml file in your terraform directory. Your .testtfswitch.toml file should look like this: bin = \"/Users/warrenveerasingam/bin/terraform\" version = \"0.11.3\" Run testtfswitch and it should automatically install the required terraform version in the specified binary path","title":"Use .testtfswitch.toml file  (For non-admin - users with limited privilege on their computers)"},{"location":"Quick-Start/#use-testtfswitchrc-file","text":"Create a .testtfswitchrc file containing the desired version For example, echo \"0.10.5\" >> .testtfswitchrc for version 0.10.5 of terraform Run the command testtfswitch in the same directory as your .testtfswitchrc Instead of a .testtfswitchrc file, a .terraform-version file may be used for compatibility with tfenv and other tools which use it Automatically switch with bash Add the following to the end of your ~/.bashrc file: (Use either .testtfswitchrc or .testtfswitch.toml or .terraform-version ) cdtesttfswitch(){ builtin cd \"$@\"; cdir=$PWD; if [ -e \"$cdir/.testtfswitchrc\" ]; then testtfswitch fi } alias cd='cdtesttfswitch' Automatically switch with zsh Add the following to the end of your ~/.zshrc file: load-testtfswitch() { local testtfswitchrc_path=\".testtfswitchrc\" if [ -f \"$testtfswitchrc_path\" ]; then testtfswitch fi } add-zsh-hook chpwd load-testtfswitch load-testtfswitch NOTE: if you see an error like this: command not found: add-zsh-hook , then you might be on an older version of zsh (see below), or you simply need to load add-zsh-hook by adding this to your .zshrc : autoload -U add-zsh-hook older version of zsh cd(){ builtin cd \"$@\"; cdir=$PWD; if [ -e \"$cdir/.testtfswitchrc\" ]; then testtfswitch fi }","title":"Use .testtfswitchrc file"},{"location":"Troubleshoot/","text":"Problem: install: can't change permissions of /usr/local/bin: Operation not permitted \"Unable to remove symlink. You must have SUDO privileges\" \"Unable to create symlink. You must have SUDO privileges\" install: cannot create regular file '/usr/local/bin/testtfswitch': Permission denied Solution: You probably need to have privileges to install testtfswitch at /usr/local/bin. Try the following. wget https://raw.githubusercontent.com/warrensbox/terraform-switcher/release/install.sh chmod 755 install.sh ./install.sh -b bin-directory ./bin-directory/testtfswitch wget https://raw.githubusercontent.com/warrensbox/terraform-switcher/release/install.sh chmod 755 install.sh ./install.sh -b bin-directory ./bin-directory/testtfswitch Or, use the custom directory option -b : https://camo.githubusercontent.com/dad8aa8e1b2028f5cf35a83c0b58d9a47c591627/68747470733a2f2f73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f6b65706c65722d696d616765732f77617272656e73626f782f74667377697463682f74667377697463682e676966","title":"Troubleshoot"},{"location":"Upgrade-or-Uninstall/","text":"Upgrade: Homebrew brew upgrade warrensbox/tap/testtfswitch Linux Rerun: curl -L https://raw.githubusercontent.com/warrensbox/terraform-switcher/release/install.sh | bash Uninstall: Homebrew brew uninstall warrensbox/tap/testtfswitch Linux Run: rm /usr/local/bin/testtfswitch","title":"Upgrade or Uninstall"},{"location":"Upgrade-or-Uninstall/#upgrade","text":"","title":"Upgrade:"},{"location":"Upgrade-or-Uninstall/#homebrew","text":"brew upgrade warrensbox/tap/testtfswitch","title":"Homebrew"},{"location":"Upgrade-or-Uninstall/#linux","text":"Rerun: curl -L https://raw.githubusercontent.com/warrensbox/terraform-switcher/release/install.sh | bash","title":"Linux"},{"location":"Upgrade-or-Uninstall/#uninstall","text":"","title":"Uninstall:"},{"location":"Upgrade-or-Uninstall/#homebrew_1","text":"brew uninstall warrensbox/tap/testtfswitch","title":"Homebrew"},{"location":"Upgrade-or-Uninstall/#linux_1","text":"Run: rm /usr/local/bin/testtfswitch","title":"Linux"}]}