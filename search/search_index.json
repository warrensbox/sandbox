{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction to testtfswitch The testtfswitch command line tool lets you switch between different versions of terraform . If you do not have a particular version of terraform installed, testtfswitch lets you download the version you desire. The installation is minimal and easy. Once installed, simply select the version you require from the dropdown and start using terraform. Terraform lets you safely and predictably create, change, and improve infrastructure. It is an open source tool that codifies APIs into declarative configuration files that can be shared amongst team members, treated as code, edited, reviewed, and versioned.","title":"Introduction to testtfswitch"},{"location":"#introduction-to-testtfswitch","text":"The testtfswitch command line tool lets you switch between different versions of terraform . If you do not have a particular version of terraform installed, testtfswitch lets you download the version you desire. The installation is minimal and easy. Once installed, simply select the version you require from the dropdown and start using terraform. Terraform lets you safely and predictably create, change, and improve infrastructure. It is an open source tool that codifies APIs into declarative configuration files that can be shared amongst team members, treated as code, edited, reviewed, and versioned.","title":"Introduction to testtfswitch"},{"location":"Continuous-Integration/","text":"Jenkins setup #!/bin/bash echo \"Installing tfswitch locally\" wget https://raw.githubusercontent.com/warrensbox/terraform-switcher/release/install.sh chmod 755 install.sh ./install.sh -b bin-directory ./bin-directory/tfswitch","title":"Continuous Integration"},{"location":"Continuous-Integration/#jenkins-setup","text":"#!/bin/bash echo \"Installing tfswitch locally\" wget https://raw.githubusercontent.com/warrensbox/terraform-switcher/release/install.sh chmod 755 install.sh ./install.sh -b bin-directory ./bin-directory/tfswitch","title":"Jenkins setup"},{"location":"How-to-Contribute/","text":"Step by step on how to contribute What makes an open source project meaningful is the ability for people to collaborate and improve the code. If I were to write all the code by myself, then I am only creating a software that is solely based on my opnion and purpose. Please look at the code, critique and make suggestions. It would be a learning opportunity for all of us. Step 1 Skip this step if you already have a github go workspace Create a github workspace. Step 2 Skip this step if you already have a github go workspace Export your GOPATH environment variable in your go directory. export GOPATH=`pwd` Step 3 Git clone this repository. git clone git@github.com:warrensbox/terraform-switcher.git Step 4 Go get all the dependencies. go mod download go get -v -t -d ./... Test the code (optional). go vet -tests=false ./... go test -v ./... Step 5 Create a new branch. git checkout -b feature/put-your-branch-name-here Refactor and add new features to the code. Go build the code. go build -o test-tfswitch Test the code and create a new pull request! Contributors","title":"How to Contribute"},{"location":"How-to-Contribute/#step-by-step-on-how-to-contribute","text":"What makes an open source project meaningful is the ability for people to collaborate and improve the code. If I were to write all the code by myself, then I am only creating a software that is solely based on my opnion and purpose. Please look at the code, critique and make suggestions. It would be a learning opportunity for all of us.","title":"Step by step on how to contribute"},{"location":"How-to-Contribute/#step-1","text":"Skip this step if you already have a github go workspace Create a github workspace.","title":"Step 1"},{"location":"How-to-Contribute/#step-2","text":"Skip this step if you already have a github go workspace Export your GOPATH environment variable in your go directory. export GOPATH=`pwd`","title":"Step 2"},{"location":"How-to-Contribute/#step-3","text":"Git clone this repository. git clone git@github.com:warrensbox/terraform-switcher.git","title":"Step 3"},{"location":"How-to-Contribute/#step-4","text":"Go get all the dependencies. go mod download go get -v -t -d ./... Test the code (optional). go vet -tests=false ./... go test -v ./...","title":"Step 4"},{"location":"How-to-Contribute/#step-5","text":"Create a new branch. git checkout -b feature/put-your-branch-name-here Refactor and add new features to the code. Go build the code. go build -o test-tfswitch Test the code and create a new pull request!","title":"Step 5"},{"location":"How-to-Contribute/#contributors","text":"","title":"Contributors"},{"location":"Install/","text":"Installation tfswitch is available for MacOS and Linux based operating systems. Homebrew Installation for MacOS is the easiest with Homebrew. If you do not have homebrew installed, click here . brew install warrensbox/tap/tfswitch Linux Installation for Linux operation systems. curl -L https://raw.githubusercontent.com/warrensbox/terraform-switcher/release/install.sh | bash Install from source Alternatively, you can install the binary from the source here .","title":"Install"},{"location":"Install/#installation","text":"tfswitch is available for MacOS and Linux based operating systems.","title":"Installation"},{"location":"Install/#homebrew","text":"Installation for MacOS is the easiest with Homebrew. If you do not have homebrew installed, click here . brew install warrensbox/tap/tfswitch","title":"Homebrew"},{"location":"Install/#linux","text":"Installation for Linux operation systems. curl -L https://raw.githubusercontent.com/warrensbox/terraform-switcher/release/install.sh | bash","title":"Linux"},{"location":"Install/#install-from-source","text":"Alternatively, you can install the binary from the source here .","title":"Install from source"},{"location":"Quick-Start/","text":"How to use: Use dropdown menu to select version You can switch between different versions of terraform by typing the command tfswitch on your terminal. Select the version of terraform you require by using the up and down arrow. Hit Enter to select the desired version. The most recently selected versions are presented at the top of the dropdown. Supply version on command line You can also supply the desired version as an argument on the command line. For example, tfswitch 0.10.5 for version 0.10.5 of terraform. Hit Enter to switch. See all versions including beta, alpha and release candidates(rc) Display all versions including beta, alpha and release candidates(rc). For example, tfswitch -l or tfswitch --list-all to see all versions. Hit Enter to select the desired version. Use version.tf file If a .tf file with the terraform constrain is included in the current directory, it should automatically download or switch to that terraform version. For example, the following should automatically switch terraform to version 0.12.24 : terraform { required_version = \">= 0.12.9\" required_providers { aws = \">= 2.52.0\" kubernetes = \">= 1.11.1\" } } Use .tfswitch.toml file (For non-admin - users with limited privilege on their computers) This is similiar to using a .tfswitchrc file, but you can specify a custom binary path for your terraform installation Create a custom binary path. Ex: mkdir /Users/warrenveerasingam/bin (replace warrenveerasingam with your username) Add the path to your PATH. Ex: export PATH=$PATH:/Users/warrenveerasingam/bin (add this to your bash profile or zsh profile) Pass -b or --bin parameter with your custom path to install terraform. Ex: tfswitch -b /Users/warrenveerasingam/bin/terraform 0.10.8 Optionally, you can create a .tfswitch.toml file in your terraform directory. Your .tfswitch.toml file should look like this: bin = \"/Users/warrenveerasingam/bin/terraform\" version = \"0.11.3\" Run tfswitch and it should automatically install the required terraform version in the specified binary path Use .tfswitchrc file Create a .tfswitchrc file containing the desired version For example, echo \"0.10.5\" >> .tfswitchrc for version 0.10.5 of terraform Run the command tfswitch in the same directory as your .tfswitchrc Instead of a .tfswitchrc file, a .terraform-version file may be used for compatibility with tfenv and other tools which use it Automatically switch with bash Add the following to the end of your ~/.bashrc file: (Use either .tfswitchrc or .tfswitch.toml or .terraform-version ) cdtfswitch(){ builtin cd \"$@\"; cdir=$PWD; if [ -e \"$cdir/.tfswitchrc\" ]; then tfswitch fi } alias cd='cdtfswitch' Automatically switch with zsh Add the following to the end of your ~/.zshrc file: load-tfswitch() { local tfswitchrc_path=\".tfswitchrc\" if [ -f \"$tfswitchrc_path\" ]; then tfswitch fi } add-zsh-hook chpwd load-tfswitch load-tfswitch NOTE: if you see an error like this: command not found: add-zsh-hook , then you might be on an older version of zsh (see below), or you simply need to load add-zsh-hook by adding this to your .zshrc : autoload -U add-zsh-hook older version of zsh cd(){ builtin cd \"$@\"; cdir=$PWD; if [ -e \"$cdir/.tfswitchrc\" ]; then tfswitch fi }","title":"Quick Start"},{"location":"Quick-Start/#how-to-use","text":"","title":"How to use:"},{"location":"Quick-Start/#use-dropdown-menu-to-select-version","text":"You can switch between different versions of terraform by typing the command tfswitch on your terminal. Select the version of terraform you require by using the up and down arrow. Hit Enter to select the desired version. The most recently selected versions are presented at the top of the dropdown.","title":"Use dropdown menu to select version"},{"location":"Quick-Start/#supply-version-on-command-line","text":"You can also supply the desired version as an argument on the command line. For example, tfswitch 0.10.5 for version 0.10.5 of terraform. Hit Enter to switch.","title":"Supply version on command line"},{"location":"Quick-Start/#see-all-versions-including-beta-alpha-and-release-candidatesrc","text":"Display all versions including beta, alpha and release candidates(rc). For example, tfswitch -l or tfswitch --list-all to see all versions. Hit Enter to select the desired version.","title":"See all versions including beta, alpha and release candidates(rc)"},{"location":"Quick-Start/#use-versiontf-file","text":"If a .tf file with the terraform constrain is included in the current directory, it should automatically download or switch to that terraform version. For example, the following should automatically switch terraform to version 0.12.24 : terraform { required_version = \">= 0.12.9\" required_providers { aws = \">= 2.52.0\" kubernetes = \">= 1.11.1\" } }","title":"Use version.tf file"},{"location":"Quick-Start/#use-tfswitchtoml-file-for-non-admin-users-with-limited-privilege-on-their-computers","text":"This is similiar to using a .tfswitchrc file, but you can specify a custom binary path for your terraform installation Create a custom binary path. Ex: mkdir /Users/warrenveerasingam/bin (replace warrenveerasingam with your username) Add the path to your PATH. Ex: export PATH=$PATH:/Users/warrenveerasingam/bin (add this to your bash profile or zsh profile) Pass -b or --bin parameter with your custom path to install terraform. Ex: tfswitch -b /Users/warrenveerasingam/bin/terraform 0.10.8 Optionally, you can create a .tfswitch.toml file in your terraform directory. Your .tfswitch.toml file should look like this: bin = \"/Users/warrenveerasingam/bin/terraform\" version = \"0.11.3\" Run tfswitch and it should automatically install the required terraform version in the specified binary path","title":"Use .tfswitch.toml file  (For non-admin - users with limited privilege on their computers)"},{"location":"Quick-Start/#use-tfswitchrc-file","text":"Create a .tfswitchrc file containing the desired version For example, echo \"0.10.5\" >> .tfswitchrc for version 0.10.5 of terraform Run the command tfswitch in the same directory as your .tfswitchrc Instead of a .tfswitchrc file, a .terraform-version file may be used for compatibility with tfenv and other tools which use it Automatically switch with bash Add the following to the end of your ~/.bashrc file: (Use either .tfswitchrc or .tfswitch.toml or .terraform-version ) cdtfswitch(){ builtin cd \"$@\"; cdir=$PWD; if [ -e \"$cdir/.tfswitchrc\" ]; then tfswitch fi } alias cd='cdtfswitch' Automatically switch with zsh Add the following to the end of your ~/.zshrc file: load-tfswitch() { local tfswitchrc_path=\".tfswitchrc\" if [ -f \"$tfswitchrc_path\" ]; then tfswitch fi } add-zsh-hook chpwd load-tfswitch load-tfswitch NOTE: if you see an error like this: command not found: add-zsh-hook , then you might be on an older version of zsh (see below), or you simply need to load add-zsh-hook by adding this to your .zshrc : autoload -U add-zsh-hook older version of zsh cd(){ builtin cd \"$@\"; cdir=$PWD; if [ -e \"$cdir/.tfswitchrc\" ]; then tfswitch fi }","title":"Use .tfswitchrc file"},{"location":"Troubleshoot/","text":"Problem: install: can't change permissions of /usr/local/bin: Operation not permitted \"Unable to remove symlink. You must have SUDO privileges\" \"Unable to create symlink. You must have SUDO privileges\" install: cannot create regular file '/usr/local/bin/tfswitch': Permission denied Solution: You probably need to have privileges to install tfswitch at /usr/local/bin. Try the following. wget https://raw.githubusercontent.com/warrensbox/terraform-switcher/release/install.sh chmod 755 install.sh ./install.sh -b bin-directory ./bin-directory/tfswitch","title":"Troubleshoot"},{"location":"Upgrade-or-Uninstall/","text":"Upgrade: Homebrew brew upgrade warrensbox/tap/tfswitch Linux Rerun: curl -L https://raw.githubusercontent.com/warrensbox/terraform-switcher/release/install.sh | bash Uninstall: Homebrew brew uninstall warrensbox/tap/tfswitch Linux Run: rm /usr/local/bin/tfswitch","title":"Upgrade or Uninstall"},{"location":"Upgrade-or-Uninstall/#upgrade","text":"","title":"Upgrade:"},{"location":"Upgrade-or-Uninstall/#homebrew","text":"brew upgrade warrensbox/tap/tfswitch","title":"Homebrew"},{"location":"Upgrade-or-Uninstall/#linux","text":"Rerun: curl -L https://raw.githubusercontent.com/warrensbox/terraform-switcher/release/install.sh | bash","title":"Linux"},{"location":"Upgrade-or-Uninstall/#uninstall","text":"","title":"Uninstall:"},{"location":"Upgrade-or-Uninstall/#homebrew_1","text":"brew uninstall warrensbox/tap/tfswitch","title":"Homebrew"},{"location":"Upgrade-or-Uninstall/#linux_1","text":"Run: rm /usr/local/bin/tfswitch","title":"Linux"}]}